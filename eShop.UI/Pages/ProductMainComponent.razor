@using eShop.UI.Storage.Services
@* @inject IStorageService Storage *@


<section class="d-flex flex-wrap">
    @foreach (var product in Service!.Products)
    {

        <div class="image-container m-2 bg-white">
            <img src="@product.PictureURL" alt="Man Coat Image">
            <h1 style="font-size: 20px; margin: 0;">@product.Name</h1>

            <div class="d-flex justify-content-around">
                <div class="d-flex flex-column py-2">
                    @if (product.Sizes!.Count > 0)
                    {
                        <div class="btn-group btn-group-sm py-1" role="group" aria-label="Basic radio toggle button group">
                            @foreach (var size in product.Sizes)
                            {
                                <input type="radio" class="btn-check" name="btnradio"
                                       id="size-@product.Id-@size.Id"
                                       @onclick="() => OnSizeClick(product, size)"
                                       autocomplete="off" checked>
                                <label class="btn btn-outline-primary btn-sm btn-radio"
                                       style="color: black; border-color: black; font-size: 8px; padding: 2px 2px"
                                       for="size-@product.Id-@size.Id">@size.Name.ToUpper()</label>
                            }
                        </div>
                    }

                    @if (product.Colors!.Count > 0)
                    {
                        <div class="d-flex flex-row py-1">
                            @foreach (var color in product.Colors)
                            {
                                <div class="btn-group" role="group" aria-label="Basic radio toggle button group">
                                    <input type="radio" class="btn-check" name="color-@product.Id-@color.Id" id="color-@product.Id-@color.Id"
                                           autocomplete="off" @onclick="() => OnColorClick(product, color)">
                                    <label class="btn btn-sm btn-outline-dark"
                                           style="background-color:#@color.BGColor; color:#@(color.IsSelected ? color.TextColor : color.BGColor); font-size: 6px; padding: 4px 4px"
                                           for="color-@product.Id-@color.Id"><i class="bi-check"></i></label>
                                </div>
                            }
                        </div>
                    }
                </div>

                <button class="btn btn-sm btn-success bg-success border-secondary ms-2" style="margin-block: 15px;" @onclick="() => AddToCart(product)"><i class="bi-cart"></i></button>

            </div>
        </div>
    }
</section>


@code {
    [CascadingParameter(Name = "Service")] public UIService? Service { get; set; }
    [Parameter] public EventCallback OnChange { get; set; }

    void OnColorClick(ProductGetDTO product, ColorGetDTO color)
    {
        product.Colors!.ForEach(c => c.IsSelected = false);
        color.IsSelected = true;
    }


    void OnSizeClick(ProductGetDTO product, SizeGetDTO size)
    {
        product.Sizes!.ForEach(s => s.IsSelected = false);
        size.IsSelected = true;
    }

    async Task AddToCart(ProductGetDTO product)
    {

        Service!.CartItems.Add(product);
        await Service!.SaveToStorage("CartItems", Service!.CartItems);

    }
}
