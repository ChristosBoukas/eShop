<div>
    <h3>Size Put</h3>

    <EditForm Model="@sizePutDTO" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="property1">Name:</label>
            <InputText id="property1" @bind-Value="@sizePutDTO.Name" class="form-control" />
        </div>

        <div class="form-group">
            <label for="property2">OptionType:</label>
            <InputSelect id="property2" @bind-Value="@sizePutDTO.OptionType" class="form-control">
                @foreach (var option in Enum.GetValues(typeof(OptionType)))
                {
                    <option value="@option">@option</option>
                }
            </InputSelect>
        </div>

        <div class="form-group">
            <label for="idToUpdate">ID to update:</label>
            <InputNumber id="idToUpdate" @bind-Value="@sizePutDTO.Id" class="form-control" />
        </div>


        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
</div>

@code {
    private SizePutDTO sizePutDTO = new SizePutDTO();
    private int idToUpdate;
    [CascadingParameter(Name = "Service")] public UIServiceAdmin Service { get; set; }

    private async Task HandleValidSubmit()
    {
        if (Service != null)
        {
            await Service.PutDTO(sizePutDTO, idToUpdate);
        }
        else
        {
            // Handle the case where AdminService is null
        }
    }
}