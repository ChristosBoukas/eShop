<div>
    <h3>Product Put</h3>

    <EditForm Model="@productputDTO" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="property1">Name:</label>
            <InputText id="property1" @bind-Value="@productputDTO.Name" class="form-control" />
        </div>

        <div class="form-group">
            <label for="property2">Description:</label>
            <InputText id="property2" @bind-Value="@productputDTO.Description" class="form-control" />
        </div>

        <div class="form-group">
            <label for="property2">PictureURL:</label>
            <InputText id="property3" @bind-Value="@productputDTO.PictureURL" class="form-control" />
        </div>

        <div class="form-group">
            <label for="idToUpdate">ID to update:</label>
            <InputNumber id="idToUpdate" @bind-Value="@idToUpdate" class="form-control" />
        </div>


        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
</div>

@code {
    private ProductPutDTO productputDTO = new ProductPutDTO();
    private int idToUpdate;
    [CascadingParameter(Name = "Service")] public UIServiceAdmin Service { get; set; }

    private async Task HandleValidSubmit()
    {
        if (Service != null)
        {
            await Service.PutDTO(productputDTO, idToUpdate);
        }
        else
        {
            // Handle the case where AdminService is null
        }
    }
}